/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/things-to-do/prisoner/{prisonerId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieve things-to-do for a prisoner
     * @description Provides a list of things-to-do for a specified prisoner based on their ID.
     */
    get: operations['getThingsToDo']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/example/time': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieve today's date and time
     * @description This is an example endpoint that calls a service to return the current date and time. Requires role ROLE_TEMPLATE_KOTLIN__UI
     */
    get: operations['getTime']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/example/message/{parameter}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Example message endpoint to call another API
     * @description This is an example endpoint that calls back to the kotlin template.
     *           It will return a 404 response as the /example-external-api endpoint hasn't been implemented, so we use wiremock
     *           in integration tests to simulate other responses.
     *           Requires role ROLE_TEMPLATE_KOTLIN__UI
     */
    get: operations['getMessage']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    AdaIntercept: {
      message: string
      /** @enum {string} */
      type: 'NONE' | 'FIRST_TIME' | 'UPDATE' | 'PADA' | 'PADAS' | 'FIRST_TIME_WITH_NO_ADJUDICATION'
      /** Format: int32 */
      number: number
      anyProspective: boolean
      messageArguments: string[]
    }
    AdjustmentThingsToDo: {
      prisonerId: string
      thingsToDo: 'ADA_INTERCEPT'[]
      adaIntercept?: components['schemas']['AdaIntercept']
    }
    ThingsToDo: {
      prisonerId: string
      calculationThingsToDo: 'CALCULATION_REQUIRED'[]
      adjustmentThingsToDo?: components['schemas']['AdjustmentThingsToDo']
      hasAdjustmentThingsToDo: boolean
      hasCalculationThingsToDo: boolean
    }
    ErrorResponse: {
      /** Format: int32 */
      status: number
      errorCode?: string
      userMessage?: string
      developerMessage?: string
      moreInfo?: string
    }
    ExampleMessageDto: {
      message: string
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  getThingsToDo: {
    parameters: {
      query?: never
      header?: never
      path: {
        /**
         * @description Prisoner's ID (also known as nomsId)
         * @example A1234AB
         */
        prisonerId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successfully returns the things-to-do list */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ThingsToDo']
        }
      }
      /** @description Unauthorized - valid Oauth2 token required */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ThingsToDo']
        }
      }
      /** @description Forbidden - requires appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ThingsToDo']
        }
      }
    }
  }
  getTime: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description today's date and time */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': string
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getMessage: {
    parameters: {
      query?: never
      header?: never
      path: {
        parameter: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description a message with a parameter */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ExampleMessageDto']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
}
