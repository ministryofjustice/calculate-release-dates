{% extends "govuk/template.njk" %}
{% from "govuk/components/phase-banner/macro.njk" import govukPhaseBanner %}
{% from "moj/components/header/macro.njk" import mojHeader %}
{% from "hmpps/components/court-cases-release-dates/service-header/macro.njk" import serviceHeader %}
{% from "hmpps/components/court-cases-release-dates/footer/macro.njk" import footer %}

{% block head %}
  {% if appInsightsConnectionString %}
    <script type="text/javascript" src="/assets/applicationinsights-web.min.js"  nonce="{{ cspNonce }}"></script>
    <script type="text/javascript" src="/assets/applicationinsights-clickanalytics-js.min.js"  nonce="{{ cspNonce }}"></script>
    <script type="text/javascript" nonce="{{ cspNonce }}">
      var clickPluginInstance = new Microsoft.ApplicationInsights.ClickAnalyticsPlugin();
      // Click Analytics configuration
      var clickPluginConfig = {
          autoCapture : true,
          dataTags: {
              useDefaultContentNameOrId: true
          }
      }
      var snippet = {
        config: {
          connectionString: "{{ appInsightsConnectionString }}",
          extensions: [
                clickPluginInstance
            ],
          extensionConfig: {
                [clickPluginInstance.identifier] : clickPluginConfig
            },
          autoTrackPageVisitTime: true
        }
      }
      var init = new Microsoft.ApplicationInsights.ApplicationInsights(snippet)
      var appInsights = init.loadAppInsights();
      appInsights.addTelemetryInitializer(function (envelope) {
          envelope.tags["ai.cloud.role"] = "{{ appInsightsApplicationName }}"
          envelope.tags["ai.application.ver"] = "{{ buildNumber }}"
          // Check if the telemetry item is a ClickEvent
          if (envelope.data.baseTypeSource === "ClickEvent") {
              // Parse the content property, which is also a JSON string
              let contentArray = JSON.parse(envelope.data.content);
              // Iterate over the content array
              for (let content of contentArray) {
                  // Check if the contentName property exists and qa equals 'prisoner-link'
                  if (content.contentName && content.qa === "prisoner-link") {
                      // Redact the contentName property
                      let redactedStr = "REDACTED";
                      content.contentName = redactedStr;
                      envelope.baseData.name= redactedStr;
                  }
              }
              // Replace the original content property with the redacted version
              envelope.data.content = JSON.stringify(contentArray);
          }
        });
      appInsights.trackPageView();
    </script>
  {% endif %}

  {% if tagManagerContainerId %}
    <!-- Tag manager dataLayer -->
    <script nonce="{{ cspNonce }}">
      window.dataLayer = window.dataLayer || [];
    </script>

    <!-- Add user details to the dataLayer if present on this page load -->
    {% if user %}
      <script nonce="{{ cspNonce }}">
        window
          .dataLayer
          .push({
            'user': {
              'prisons': {{ user.caseloads | formatListAsString | safe }},
              'prisonDescriptions': {{ user.caseloadDescriptions | formatListAsString | safe }}
            }
          })
      </script>
    {% endif %}

    <!-- Google Tag Manager -->
    <script nonce="{{ cspNonce }}">
      (function (w, d, s, l, i) {
        w[l] = w[l] || [];
        w[l].push({'gtm.start': new Date().getTime(), event: 'gtm.js'});
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer'
            ? '&l=' + l
            : '';
        j.async = true;
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
        var n = d.querySelector('[nonce]');
        n && j.setAttribute('nonce', n.nonce || n.getAttribute('nonce'));
        f
          .parentNode
          .insertBefore(j, f);
      })(window, document, 'script', 'dataLayer', '{{ tagManagerContainerId }}');
    </script>
    <!-- End Google Tag Manager -->
  {% endif %}

  <link href="/assets/stylesheets/application.css?{{ version }}" rel="stylesheet"/>

  {% if feComponents.cssIncludes %}
    {% for css in feComponents.cssIncludes %}
      <link href="{{ css }}" nonce="{{ cspNonce }}" rel="stylesheet" />
    {% endfor %}
  {% endif %}


  {% block javascripts %}
  {% endblock %}

{% endblock %}


{% block pageTitle %}{{pageTitle | default(applicationName)}}
{% endblock %}

{% block header %}
  {% if feComponents.header %}
    {{ feComponents.header | safe }}
  {% else %}
    {% include "./fallback_header.njk" %}
  {% endif %}

  {% if showCCARDNav %}
      {% if commonElementConfig.serviceHeader %}
        {{ serviceHeader(commonElementConfig.serviceHeader) }}
      {% else %}
        {{ serviceHeader(defaultServiceHeaderConfig) }}
      {% endif %}
  {% endif %}

{% endblock %}

{% block bodyStart %}{% endblock %}

{% block beforeContent %}
  <aside role="complementary">
    {% include "../pages/partials/prisonerIdentityBar.njk" %}
  </aside>
  <span class="govuk-visually-hidden" id="{{ pageId }}"></span>
{% endblock %}

{% block bodyEnd %}
  {# Run JavaScript at end of the
  <body>, to avoid blocking the initial render. #}
  <script type="module" src="/assets/govukFrontendInit.js"></script>
  <script src="/assets/moj/all.js"></script>
  <script src="/assets/mojFrontendInit.js"></script>
    {% for js in feComponents.jsIncludes %}
      <script src="{{ js }}" nonce="{{ cspNonce }}"></script>
    {% endfor %}
{% endblock %}

{% block footer %}
    {{
      footer({ 
        environment: hmppsDesignSystemEnvironment, 
        attributes: {
          "data-qa": "ccrds-footer"
        } 
      }) 
    }}
{% endblock %}